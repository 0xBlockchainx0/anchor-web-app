name: TEST

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        node: [ 12, 14, 15 ]
        os: [ ubuntu-latest ]
        include:
          - os: windows-latest
            node: 12
          - os: windows-latest
            node: 14

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Set Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Version
        run: |
          node --version
          yarn --version

      - name: Install dependencies
        run: yarn install

      - name: Test
        run: |
          yarn run app:coverage
          yarn run landing:coverage
          yarn run packages:coverage

      - name: Lint
        run: yarn run lint

      - name: Test build packages
        run: yarn run packages:build
